name: Integration local docker workflow

on: pull_request

jobs:
  setup:
    name: local-docker-deploy
    runs-on: ubuntu-latest
    container: 
      image: mlcommons/medperf-tests-container:latest
      options: --privileged
    env:
      IMAGE_NAME: medperf-api:test
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set server environment vars
      working-directory: ./server
      run: cp .env.example .env

    - name: Generate SSL certificate
      working-directory: ./server
      run: sh setup-dev-server.sh -c cert.crt -k cert.key -d 0

    - name: Start Docker daemon
      working-directory: .
      run: dockerd &> dockerd-logfile &

    - name: Build container image
      working-directory: ./server
      run: docker build -t ${{ env.IMAGE_NAME }} -f Dockerfile.gha .

    - name: Run server in background
      working-directory: ./server
      run: PORT=8080 && docker run --name ${{ env.IMAGE_NAME }} -d -p 8000:${PORT} -e PORT=${PORT} -e SSL_FLAGS="--certfile=cert.crt --keyfile=cert.key" ${{ env.IMAGE_NAME }}

    - name: Check running containers
      run: docker ps && docker logs ${{ env.IMAGE_NAME }}

    - name: Run integration tests
      working-directory: ./server
      run: pip install -r test-requirements.txt --user && python seed.py --cert cert.crt

    - name: Install dependencies
      working-directory: .
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        if [ -f cli/requirements.txt ]; then pip install -e cli; fi

    - name: Run xrv demo
      working-directory: .
      run: sh cli/cli_xrv_demo.sh -f

    - name: Run client integration tests
      working-directory: .
      run: sh cli/cli_tests.sh
